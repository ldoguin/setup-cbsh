name: Develop and Release Test

on:
  push:
    branches:
      - main
      - develop
      - release/*
    paths-ignore:
      - '**.md'

defaults:
  run:
    shell: cbsh --script {0}

jobs:
  test-latest:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    name: test (${{matrix.os}}, setup-cbsh@latest-dev)
    steps:
    - uses: actions/checkout@v4.1.7
    - name: Setup cbsh@latest
      uses: ldoguin/setup-cbsh@develop
      with:
        check-latest: true
        enable-plugins: true
      env:
        ACTIONS_STEP_DEBUG: true
    - name: You can run bash commands, too
      run: pwd && ls -la
      shell: bash
    - name: Default shell will be `cbsh`
      run: |
        echo $'Couchbase Shell version info:(char nl)'; echo (version)
        echo $'Current env:(char nl)'; echo $env
        echo 'Current NU_LIB_DIRS:'
        echo $env.NU_LIB_DIRS
        echo $'Couchbase Shell path:(which cbsh)(char nl)'
        echo $"(char nl)Dir contents:(char nl)"; echo (ls ((which cbsh).path.0 | path dirname))
        def greeting [name: string] {
          echo $'Hello ($name)'
        }
        greeting hustcer

  test-ver:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    name: test (${{matrix.os}}, setup-cbsh@v1)
    steps:
    - uses: actions/checkout@v4.1.7
    - name: Setup cbsh@latest
      uses: ldoguin/setup-cbsh@v1
      with:
        version: v0.75.2
        enable-plugins: true
      env:
        ACTIONS_STEP_DEBUG: true
    - run: echo $'Couchbase Shell version info:(char nl)'; version
    - run: echo $'Current env:(char nl)'; $env
    - run: echo $'Couchbase Shell path:(which cbsh)(char nl)'
    - run: echo $"(char nl)Dir contents:(char nl)"; ls ((which cbsh).path.0 | path dirname)
